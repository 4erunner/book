@startuml

package api {

  class Flask {
    allocate_endpoint()
  }
}

package sqlalchemy {
  class Session {
    query()
    add()
  }
}

package allocation {

  class services {
    allocate(line, repository, session)
  }

  class Batch {
    allocate ()
  }

  abstract class AbstractRepository {
    add ()
    get ()
    list ()
  }

  class BatchRepository {
    session: Session
  }

  class FakeRepository {
    batches: List<Batch>
  }
}

services -> AbstractRepository: uses

AbstractRepository <|-- FakeRepository : implements
AbstractRepository <|-- BatchRepository : implements
AbstractRepository --> Batch : stores
Flask --> services : invokes

BatchRepository --> Session : abstracts
@enduml