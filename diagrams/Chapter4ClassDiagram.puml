@startuml

package api {

  class Flask {
    allocate_endpoint()
  }
}

package sqlalchemy {
  class Session {
    query()
    add()
  }
}

package repository {
  class BatchRepository {
    session: Session
  }
}

package unit_of_work {

  class UnitOfWork {
    batches: BatchRepository
    session: Session

    commit ()
  }

  class functions {
    start_uow () : UnitOfWork
  }

}

package services {
  class functions {
    allocate (line, start_uow)
  }
}

package model {

  class Batch {
    allocate ()
  }

}

services -> AbstractRepository: uses

AbstractRepository <|-- FakeRepository : implements
AbstractRepository <|-- BatchRepository : implements
AbstractRepository --> Batch : stores
Flask --> services : invokes

BatchRepository --> Session : abstracts
@enduml